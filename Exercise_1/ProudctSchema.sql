Create database CSM ;

USE CSM

CREATE TABLE EMPLOYEE
(
	EMPLOYEE_ID VARCHAR(15) PRIMARY KEY,
	EMPLOYEE_NAME VARCHAR(25) NOT NULL,
	EMPLOYEE_PASSWORD CHAR(8) NOT NULL,
	EMPLOYEE_CONTACT CHAR(11) NOT NULL,
	EMPLOYEE_ADDRESS VARCHAR(50) NOT NULL,
	EMPLOYEE_EMAIL VARCHAR(25) UNIQUE NOT NULL,
	EMPLOYEE_DESIGNATION VARCHAR(15) NOT NULL,
	EMPLOYEE_HIREDATE DATE NOT NULL,
	EMPLOYEE_FIREDATE DATE,
	EMPLOYEE_STATUS VARCHAR(10) NOT NULL,
	EMPLOYEE_SALES INT,
)

CREATE TABLE MANUFACTURER
(
	MANUFACTURER_ID VARCHAR(15) PRIMARY KEY,
	MANUFACTURER_NAME VARCHAR(25) NOT NULL,
	MANUFACTURER_EMAIL VARCHAR(25) UNIQUE NOT NULL,
	MANUFACTURER_ADDRESS VARCHAR(50) NOT NULL,
	MANUFACTURER_CONTACT CHAR(11) NOT NULL,
)

CREATE TABLE CUSTOMER 
(
	CUSTOMER_CNIC CHAR(13) PRIMARY KEY,
	CUSTOMER_NAME VARCHAR(25) NOT NULL,
	CUSTOMER_CONTACT CHAR(13) NOT NULL,
	CUSTOMER_ADDRESS VARCHAR(50) NOT NULL,
)
Create Table CAR
(
	CAR_ID VARCHAR(15) PRIMARY KEY,
	CAR_NAME VARCHAR(20) NOT NULL,
	CAR_MODEL CHAR(4) NOT NULL,
	CAR_COMPANY VARCHAR(15) NOT NULL,
	CAR_STATUS VARCHAR(10) NOT NULL,
	CAR_PRICE INT NOT NULL,
)

CREATE TABLE MANUF_ORDER
(
	ORDER_ID VARCHAR(15) PRIMARY KEY,
	EMPLOYEE_ID VARCHAR(15) FOREIGN KEY REFERENCES EMPLOYEE(EMPLOYEE_ID),
	CAR_ID VARCHAR(15) FOREIGN KEY REFERENCES CAR(CAR_ID),
	MANUFACTURER_ID VARCHAR(15)  FOREIGN KEY REFERENCES MANUFACTURER(MANUFACTURER_ID),
	ORDER_DATE DATE NOT NULL,
	BILL INT NOT NULL,
)

CREATE TABLE STOCK
(
	ORDER_ID VARCHAR(15) FOREIGN KEY REFERENCES MANUF_ORDER(ORDER_ID),
	CAR_ID VARCHAR(15) FOREIGN KEY REFERENCES CAR(CAR_ID),
	REC_DATE DATE NOT NULL
)

CREATE TABLE CUSTOMER_ORDER
(
	ORDER_ID VARCHAR(15) PRIMARY KEY,
	EMPLOYEE_ID VARCHAR(15) FOREIGN KEY REFERENCES EMPLOYEE(EMPLOYEE_ID),
	CAR_ID VARCHAR(15) FOREIGN KEY REFERENCES CAR(CAR_ID),
	CUSTOMER_CNIC CHAR(13) FOREIGN KEY REFERENCES CUSTOMER(CUSTOMER_CNIC),
	ORDER_DATE DATE NOT NULL,
	BILL INT NOT NULL,
)

CREATE TABLE STOCK_PAYMENT
(
	ORDER_ID VARCHAR(15) FOREIGN KEY REFERENCES MANUF_ORDER(ORDER_ID),
	PAYMENT_DATE DATE NOT NULL,
)

CREATE TABLE SELL_PAYMENT
(
	ORDER_ID VARCHAR(15) FOREIGN KEY REFERENCES CUSTOMER_ORDER(ORDER_ID),
	PAYMENT_DATE DATE NOT NULL,
)


CREATE TABLE ACCOUNT
(
	MANF_ORDER VARCHAR(15) FOREIGN KEY REFERENCES MANUF_ORDER(ORDER_ID),
	CUST_ORDER VARCHAR(15) FOREIGN KEY REFERENCES CUSTOMER_ORDER(ORDER_ID),
	AMOUNT INT,
	IS_PAID varchar(5) NOT NULL,	
	PAYMENT_DATE DATE NOT NULL,
)









-- Update values for EMPLOYEE with EMPLOYEE_ID 'SM123'
INSERT INTO EMPLOYEE (EMPLOYEE_ID, EMPLOYEE_NAME, EMPLOYEE_PASSWORD, EMPLOYEE_CONTACT, EMPLOYEE_ADDRESS, EMPLOYEE_EMAIL, EMPLOYEE_DESIGNATION, EMPLOYEE_HIREDATE, EMPLOYEE_STATUS, EMPLOYEE_SALES)
VALUES ('SM123', 'John', 'Pass123', '03333333333', 'Karachi', 'john@example.com', 'Supervisor', CONVERT(DATE, GETDATE()), 'Working', 50000);

-- Update values for EMPLOYEE with EMPLOYEE_ID 'MG999'
INSERT INTO EMPLOYEE (EMPLOYEE_ID, EMPLOYEE_NAME, EMPLOYEE_PASSWORD, EMPLOYEE_CONTACT, EMPLOYEE_ADDRESS, EMPLOYEE_EMAIL, EMPLOYEE_DESIGNATION, EMPLOYEE_HIREDATE, EMPLOYEE_STATUS, EMPLOYEE_SALES)
VALUES ('MG999', 'Ali', 'Pass456', '03444444444', 'Islamabad', 'ali@example.com', 'Director', CONVERT(DATE, GETDATE()), 'Working', 100000);

-- Update values for CAR with CAR_ID 'C1356'
INSERT INTO CAR (CAR_ID, CAR_NAME, CAR_MODEL, CAR_COMPANY, CAR_STATUS, CAR_PRICE)
VALUES ('C1356', 'Model Y', '2021', 'Tesla', 'Available', 2800000);

-- Update values for CAR with CAR_ID 'C1245'
INSERT INTO CAR (CAR_ID, CAR_NAME, CAR_MODEL, CAR_COMPANY, CAR_STATUS, CAR_PRICE)
VALUES ('C1245', 'X5', '2020', 'BMW', 'Available', 5000000);

-- Update values for CUSTOMER with CUSTOMER_CNIC '1273648292039'
INSERT INTO CUSTOMER (CUSTOMER_CNIC, CUSTOMER_NAME, CUSTOMER_CONTACT, CUSTOMER_ADDRESS)
VALUES ('1273648292039', 'John Doe', '9876543210', 'New York');

-- Update values for EMPLOYEE with EMPLOYEE_ID 'MG999'
INSERT INTO EMPLOYEE (EMPLOYEE_ID, EMPLOYEE_NAME, EMPLOYEE_PASSWORD, EMPLOYEE_CONTACT, EMPLOYEE_ADDRESS, EMPLOYEE_EMAIL, EMPLOYEE_DESIGNATION, EMPLOYEE_HIREDATE, EMPLOYEE_STATUS, EMPLOYEE_SALES)
VALUES ('MG999', 'Khan', 'Pass789', '03333333333', 'Karachi', 'khan@example.com', 'Manager', CONVERT(DATE, GETDATE()), 'Working', 75000);

-- Update values for CAR with CAR_ID 'C3241'
INSERT INTO CAR (CAR_ID, CAR_NAME, CAR_MODEL, CAR_COMPANY, CAR_STATUS, CAR_PRICE)
VALUES ('C3241', 'GLC', '2021', 'Mercedes', 'Available', 3500000);

-- Update values for MANUFACTURER with MANUFACTURER_ID 'MF123'
INSERT INTO MANUFACTURER (MANUFACTURER_ID, MANUFACTURER_NAME, MANUFACTURER_CONTACT, MANUFACTURER_EMAIL, MANUFACTURER_ADDRESS)
VALUES ('MF123', 'MERCEDES', '23456789087', 'newemail@example.com', 'New Location');

-- Update values for MANUF_ORDER with ORDER_ID 'MOD123'
INSERT INTO MANUF_ORDER (ORDER_ID, EMPLOYEE_ID, CAR_ID, MANUFACTURER_ID, ORDER_DATE, BILL)
VALUES ('MOD123', 'MG999', 'C3241', 'MF123', GETDATE(), 3555000);

-- Update values for STOCK_PAYMENT with ORDER_ID 'MOD123'
INSERT INTO STOCK_PAYMENT (ORDER_ID, PAYMENT_DATE)
VALUES ('MOD123', GETDATE());

-- Update values for STOCK with ORDER_ID 'MOD123'
INSERT INTO STOCK (ORDER_ID, REC_DATE)
VALUES ('MOD123', GETDATE());

-- Update values for CUSTOMER_ORDER with ORDER_ID 'COD123'
INSERT INTO CUSTOMER_ORDER (ORDER_ID, EMPLOYEE_ID, CAR_ID, CUSTOMER_CNIC, ORDER_DATE, BILL)
VALUES ('COD123', 'MG999', 'C1245', '1273648292039', GETDATE(), 3355000);


-- Delete records from STOCK_PAYMENT and SELL_PAYMENT tables
DELETE FROM STOCK_PAYMENT;
DELETE FROM SELL_PAYMENT;

-- Delete records from CUSTOMER_ORDER table
DELETE FROM CUSTOMER_ORDER;

-- Delete records from MANUF_ORDER table
DELETE FROM MANUF_ORDER;

-- Now, you can delete records from other tables
DELETE FROM EMPLOYEE;
DELETE FROM MANUFACTURER;
DELETE FROM CUSTOMER;
DELETE FROM CAR;

-- Finally, you can delete records from tables that might be referencing others
DELETE FROM STOCK;
DELETE FROM ACCOUNT;
